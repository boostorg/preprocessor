name: GitHub Actions CI

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - githubactions*
      - feature/**
      - fix/**
      - pr/**

jobs:
  posix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "TOOLSET=gcc COMPILER=g++ CXXSTD=03,11 Job 0"
            buildtype: "boost"
            packages: ""
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++"
            cxxstd: "03,11"
          - name: "TOOLSET=gcc COMPILER=g++-4.4 CXXSTD=98 Job 1"
            buildtype: "boost"
            packages: "g++-4.4"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-4.4"
            cxxstd: "98"
          - name: "TOOLSET=gcc COMPILER=g++-4.6 CXXSTD=03,0x Job 2"
            buildtype: "boost"
            packages: "g++-4.6"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-4.6"
            cxxstd: "03,0x"
          - name: "TOOLSET=gcc COMPILER=g++-4.7 CXXSTD=03,11 Job 3"
            buildtype: "boost"
            packages: "g++-4.7"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++-4.7"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-4.7"
            cxxstd: "03,11"
          - name: "TOOLSET=gcc COMPILER=g++-4.8 CXXSTD=03,11 Job 4"
            buildtype: "boost"
            packages: "g++-4.8"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++-4.8"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-4.8"
            cxxstd: "03,11"
          - name: "TOOLSET=gcc COMPILER=g++-4.9 CXXSTD=03,11 Job 5"
            buildtype: "boost"
            packages: "g++-4.9"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++-4.9"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-4.9"
            cxxstd: "03,11"
          - name: "TOOLSET=gcc COMPILER=g++-5 CXXSTD=03,11,14,1z Job 6"
            buildtype: "boost"
            packages: "g++-5"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++-5"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-5"
            cxxstd: "03,11,14,1z"
          - name: "TOOLSET=gcc COMPILER=g++-6 CXXSTD=03,11,14,1z Job 7"
            buildtype: "boost"
            packages: "g++-6"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++-6"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-6"
            cxxstd: "03,11,14,1z"
          - name: "TOOLSET=gcc COMPILER=g++-7 CXXSTD=03,11,14,17 Job 8"
            buildtype: "boost"
            packages: "g++-7"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++-7"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-7"
            cxxstd: "03,11,14,17"
          - name: "TOOLSET=gcc COMPILER=g++-8 CXXSTD=03,11,14,17 Job 9"
            buildtype: "boost"
            packages: "g++-8"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++-8"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-8"
            cxxstd: "03,11,14,17"
          - name: "TOOLSET=gcc COMPILER=g++-9 CXXSTD=03,11,14,17 Job 10"
            buildtype: "boost"
            packages: "g++-9"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++-9"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-9"
            cxxstd: "03,11,14,17"
          - name: "TOOLSET=gcc COMPILER=g++-10 CXXSTD=03,11,14,1 Job 11"
            buildtype: "boost"
            packages: "g++-10"
            packages_to_remove: ""
            os: "ubuntu-18.04"
            cxx: "g++-10"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-10"
            cxxstd: "03,11,14,17,2a"
          - name: "TOOLSET=clang COMPILER=clang++ CXXSTD=03,11 Job 12"
            buildtype: "boost"
            packages: ""
            packages_to_remove: ""
            os: "ubuntu-18.04"
            cxx: "clang++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "clang++"
            cxxstd: "03,11"
          - name: "TOOLSET=clang COMPILER=/usr/bin/clang++ CXXST Job 13"
            buildtype: "boost"
            packages: "clang-3.3"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:14.04"
            cxx: "/usr/bin/clang++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "/usr/bin/clang++"
            cxxstd: "03,11"
          - name: "TOOLSET=clang COMPILER=/usr/bin/clang++ CXXST Job 14"
            buildtype: "boost"
            packages: "clang-3.4"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:14.04"
            cxx: "/usr/bin/clang++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "/usr/bin/clang++"
            cxxstd: "03,11"
          - name: "TOOLSET=clang COMPILER=clang++-3.5 CXXSTD=03, Job 15"
            buildtype: "boost"
            packages: "clang-3.5"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "clang++-3.5"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "clang++-3.5"
            cxxstd: "03,11,14"
          - name: "TOOLSET=clang COMPILER=clang++-3.6 CXXSTD=03, Job 16"
            buildtype: "boost"
            packages: "clang-3.6"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "clang++-3.6"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "clang++-3.6"
            cxxstd: "03,11,14"
          - name: "TOOLSET=clang COMPILER=clang++-3.7 CXXSTD=03, Job 17"
            buildtype: "boost"
            packages: "clang-3.7"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "clang++-3.7"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "clang++-3.7"
            cxxstd: "03,11,14"
          - name: "TOOLSET=clang COMPILER=clang++-3.8 CXXSTD=03, Job 18"
            buildtype: "boost"
            packages: "clang-3.8"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "clang++-3.8"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "clang++-3.8"
            cxxstd: "03,11,14"
          - name: "TOOLSET=clang COMPILER=clang++-3.9 CXXSTD=03, Job 19"
            buildtype: "boost"
            packages: "clang-3.9"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "clang++-3.9"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "clang++-3.9"
            cxxstd: "03,11,14"
          - name: "TOOLSET=clang COMPILER=clang++-4.0 CXXSTD=03, Job 20"
            buildtype: "boost"
            packages: "clang-4.0"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "clang++-4.0"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "clang++-4.0"
            cxxstd: "03,11,14"
          - name: "TOOLSET=clang COMPILER=clang++-5.0 CXXSTD=03, Job 21"
            buildtype: "boost"
            packages: "clang-5.0"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "clang++-5.0"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "clang++-5.0"
            cxxstd: "03,11,14,1z"
          - name: "TOOLSET=clang COMPILER=clang++-6.0 CXXSTD=03, Job 22"
            buildtype: "boost"
            packages: "clang-6.0"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "clang++-6.0"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "clang++-6.0"
            cxxstd: "03,11,14,17"
          - name: "TOOLSET=clang COMPILER=clang++-7 CXXSTD=03,11 Job 23"
            buildtype: "boost"
            packages: "clang-7"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "clang++-7"
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "7"
            toolset: "clang"
            compiler: "clang++-7"
            cxxstd: "03,11,14,17"
          - name: "TOOLSET=clang COMPILER=clang++-8 CXXSTD=03,11 Job 24"
            buildtype: "boost"
            packages: "clang-8"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "clang++-8"
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "8"
            toolset: "clang"
            compiler: "clang++-8"
            cxxstd: "03,11,14,17"
          - name: "TOOLSET=clang COMPILER=clang++-9 CXXSTD=03,11 Job 25"
            buildtype: "boost"
            packages: "clang-9"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "clang++-9"
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "9"
            toolset: "clang"
            compiler: "clang++-9"
            cxxstd: "03,11,14,17,2a"
          - name: "TOOLSET=clang COMPILER=clang++-10 CXXSTD=03,1 Job 26"
            buildtype: "boost"
            packages: "clang-10"
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "clang++-10"
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "10"
            toolset: "clang"
            compiler: "clang++-10"
            cxxstd: "03,11,14,17,2a"
          - name: "TOOLSET=clang COMPILER=clang++-libc++ CXXSTD= Job 27"
            buildtype: "boost"
            packages: " libc++-9-dev libc++abi-9-dev"
            packages_to_remove: "libc++-dev libc++abi-dev"
            os: "ubuntu-18.04"
            cxx: "clang++-libc++"
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "9"
            toolset: "clang"
            compiler: "clang++-libc++"
            cxxstd: "03,11,14,1z"
          - name: "CMAKE_TEST=1 Job 29"
            buildtype: "ebf47d6801-2ef7ed6698"
            packages: ""
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            cmake_test: "1"
          - name: "CMAKE_SUBDIR_TEST=1 Job 30"
            buildtype: "41e711e69e-fda7c76df5"
            packages: ""
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            cmake_subdir_test: "1"
          - name: "CMAKE_INSTALL_TEST=1 Job 31"
            buildtype: "ebf47d6801-53809b8261"
            packages: ""
            packages_to_remove: ""
            os: "ubuntu-20.04"
            container: "ubuntu:16.04"
            cxx: "g++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            cmake_install_test: "1"

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    steps:
      - name: Check if running in container
        if: matrix.container != ''
        run: echo "GHA_CONTAINER=${{ matrix.container }}" >> $GITHUB_ENV
      - name: If running in container, upgrade packages
        if: matrix.container != ''
        run: |
            apt-get -o Acquire::Retries=3 update && DEBIAN_FRONTEND=noninteractive apt-get -y install tzdata && apt-get -o Acquire::Retries=3 install -y sudo software-properties-common wget curl apt-transport-https make apt-file sudo unzip libssl-dev build-essential autotools-dev autoconf automake g++ libc++-helpers python ruby cpio gcc-multilib g++-multilib pkgconf python3 ccache libpython-dev
            sudo apt-add-repository ppa:git-core/ppa
            sudo apt-get -o Acquire::Retries=3 update && apt-get -o Acquire::Retries=3 -y install git
            python_version=$(python3 -c 'import sys; print("{0.major}.{0.minor}".format(sys.version_info))')
            sudo wget https://bootstrap.pypa.io/pip/$python_version/get-pip.py
            sudo python3 get-pip.py
            sudo /usr/local/bin/pip install cmake

      - uses: actions/checkout@v2

      - name: linux
        shell: bash
        env:
          CXX: ${{ matrix.cxx }}
          SOURCES: ${{ matrix.sources }}
          LLVM_OS: ${{ matrix.llvm_os }}
          LLVM_VER: ${{ matrix.llvm_ver }}
          PACKAGES: ${{ matrix.packages }}
          PACKAGES_TO_REMOVE: ${{ matrix.packages_to_remove }}
          JOB_BUILDTYPE: ${{ matrix.buildtype }}
          TOOLSET: ${{ matrix.toolset }}
          COMPILER: ${{ matrix.compiler }}
          CXXSTD: ${{ matrix.cxxstd }}
          CMAKE_TEST: ${{ matrix.cmake_test }}
          CMAKE_SUBDIR_TEST: ${{ matrix.cmake_subdir_test }}
          CMAKE_INSTALL_TEST: ${{ matrix.cmake_install_test }}
          TRAVIS_BRANCH: ${{ github.base_ref }}
          TRAVIS_OS_NAME: "linux"
        run: |
          echo '==================================> SETUP'
          echo '==================================> PACKAGES'
          set -e
          if [ -n "$PACKAGES_TO_REMOVE" ]; then sudo apt-get purge -y $PACKAGES_TO_REMOVE; fi
          echo ">>>>> APT: REPO.."
          for i in {1..3}; do sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test" && break || sleep 2; done
          
          if test -n "${LLVM_OS}" ; then
              wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
              if test -n "${LLVM_VER}" ; then
                  sudo -E apt-add-repository "deb http://apt.llvm.org/${LLVM_OS}/ llvm-toolchain-${LLVM_OS}-${LLVM_VER} main"
              else
                  # Snapshot (i.e. trunk) build of clang
                  sudo -E apt-add-repository "deb http://apt.llvm.org/${LLVM_OS}/ llvm-toolchain-${LLVM_OS} main"
              fi
          fi
          echo ">>>>> APT: UPDATE.."
          sudo -E apt-get -o Acquire::Retries=3 update
          if test -n "${SOURCES}" ; then
              echo ">>>>> APT: INSTALL SOURCES.."
              for SOURCE in $SOURCES; do
                  sudo -E apt-add-repository ppa:$SOURCE
              done
          fi
          echo ">>>>> APT: INSTALL ${PACKAGES}.."
          sudo -E DEBIAN_FRONTEND=noninteractive apt-get -o Acquire::Retries=3 -y --no-install-suggests --no-install-recommends install ${PACKAGES}

          echo '==================================> INSTALL AND COMPILE'
          set -e
          export TRAVIS_BUILD_DIR=$(pwd)
          export TRAVIS_BRANCH=${TRAVIS_BRANCH:-$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')}
          export VCS_COMMIT_ID=$GITHUB_SHA
          export GIT_COMMIT=$GITHUB_SHA
          export REPO_NAME=$(basename $GITHUB_REPOSITORY)
          export USER=$(whoami)
          export CC=${CC:-gcc}
          export PATH=~/.local/bin:/usr/local/bin:$PATH

          if [ "$JOB_BUILDTYPE" == "boost" ]; then

          echo '==================================> INSTALL'

          BOOST_BRANCH=develop && [ "$TRAVIS_BRANCH" == "master" ] && BOOST_BRANCH=master || true
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          git submodule update --init tools/boostdep
          cp -r $TRAVIS_BUILD_DIR/* libs/preprocessor
          python tools/boostdep/depinst/depinst.py preprocessor
          ./bootstrap.sh
          ./b2 headers

          echo '==================================> SCRIPT'

          echo "using $TOOLSET : : $COMPILER ;" > ~/user-config.jam
          ./b2 libs/preprocessor/test -j 3 toolset=$TOOLSET cxxstd=$CXXSTD $ADDRMD

          elif [ "$JOB_BUILDTYPE" == "ebf47d6801-2ef7ed6698" ]; then

          echo '==================================> INSTALL'

          BOOST_BRANCH=develop && [ "$TRAVIS_BRANCH" == "master" ] && BOOST_BRANCH=master || true
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          git submodule update --init tools/boostdep
          cp -r $TRAVIS_BUILD_DIR/* libs/preprocessor
          python tools/boostdep/depinst/depinst.py preprocessor
          ./bootstrap.sh
          ./b2 headers

          echo '==================================> SCRIPT'

          mkdir __build__ && cd __build__
          cmake -DBOOST_ENABLE_CMAKE=1 -DBoost_VERBOSE=1 -DBOOST_INCLUDE_LIBRARIES=preprocessor ..
          ctest --output-on-failure -R boost_preprocessor

          elif [ "$JOB_BUILDTYPE" == "41e711e69e-fda7c76df5" ]; then

          echo '==================================> INSTALL'

          true

          echo '==================================> SCRIPT'

          cd test/cmake_subdir_test && mkdir __build__ && cd __build__
          cmake ..
          cmake --build .
          cmake --build . --target check

          elif [ "$JOB_BUILDTYPE" == "ebf47d6801-53809b8261" ]; then

          echo '==================================> INSTALL'

          BOOST_BRANCH=develop && [ "$TRAVIS_BRANCH" == "master" ] && BOOST_BRANCH=master || true
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          git submodule update --init tools/boostdep
          cp -r $TRAVIS_BUILD_DIR/* libs/preprocessor
          python tools/boostdep/depinst/depinst.py preprocessor
          ./bootstrap.sh
          ./b2 headers

          echo '==================================> SCRIPT'

          mkdir __build__ && cd __build__
          cmake -DBOOST_ENABLE_CMAKE=1 -DBoost_VERBOSE=1 -DBOOST_INCLUDE_LIBRARIES=preprocessor -DCMAKE_INSTALL_PREFIX=~/.local ..
          cmake --build . --target install
          cd ../libs/preprocessor/test/cmake_install_test && mkdir __build__ && cd __build__
          cmake -DCMAKE_INSTALL_PREFIX=~/.local ..
          cmake --build .
          cmake --build . --target check

          fi
  osx:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "TOOLSET=clang COMPILER=clang++ CXXSTD=03,11,1 Job 28"
            buildtype: "boost"
            packages: ""
            os: "macos-10.15"
            cxx: "clang++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            xcode_version: 11.7
            toolset: "clang"
            compiler: "clang++"
            cxxstd: "03,11,14,1z"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Set DEVELOPER_DIR
        if: matrix.xcode_version != ''
        run: echo "DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode_version }}.app/Contents/Developer" >> $GITHUB_ENV
      - name: Test DEVELOPER_DIR
        run: echo $DEVELOPER_DIR

      - name: "osx"
        shell: bash
        env:
          CXX: ${{ matrix.cxx }}
          SOURCES: ${{ matrix.sources }}
          LLVM_OS: ${{ matrix.llvm_os }}
          LLVM_VER: ${{ matrix.llvm_ver }}
          PACKAGES: ${{ matrix.packages }}
          JOB_BUILDTYPE: ${{ matrix.buildtype }}
          TOOLSET: ${{ matrix.toolset }}
          COMPILER: ${{ matrix.compiler }}
          CXXSTD: ${{ matrix.cxxstd }}
          CMAKE_TEST: ${{ matrix.cmake_test }}
          CMAKE_SUBDIR_TEST: ${{ matrix.cmake_subdir_test }}
          CMAKE_INSTALL_TEST: ${{ matrix.cmake_install_test }}
          TRAVIS_BRANCH: ${{ github.base_ref }}
          TRAVIS_OS_NAME: "osx"
        run: |
          echo '==================================> SETUP'
          set -e
          sudo mv /Library/Developer/CommandLineTools /Library/Developer/CommandLineTools.bck
          echo '==================================> PACKAGES'
          echo '==================================> INSTALL AND COMPILE'
          set -e
          export TRAVIS_BUILD_DIR=$(pwd)
          export TRAVIS_BRANCH=${TRAVIS_BRANCH:-$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')}
          export VCS_COMMIT_ID=$GITHUB_SHA
          export GIT_COMMIT=$GITHUB_SHA
          export REPO_NAME=$(basename $GITHUB_REPOSITORY)
          export USER=$(whoami)
          export CC=${CC:-gcc}
          export PATH=~/.local/bin:/usr/local/bin:$PATH

          if [ "$JOB_BUILDTYPE" == "boost" ]; then

          echo '==================================> INSTALL'

          BOOST_BRANCH=develop && [ "$TRAVIS_BRANCH" == "master" ] && BOOST_BRANCH=master || true
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          git submodule update --init tools/boostdep
          cp -r $TRAVIS_BUILD_DIR/* libs/preprocessor
          python tools/boostdep/depinst/depinst.py preprocessor
          ./bootstrap.sh
          ./b2 headers

          echo '==================================> SCRIPT'

          echo "using $TOOLSET : : $COMPILER ;" > ~/user-config.jam
          ./b2 libs/preprocessor/test -j 3 toolset=$TOOLSET cxxstd=$CXXSTD $ADDRMD

          fi
